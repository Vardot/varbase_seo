<?php

/**
 * @file
 * Install, update and uninstall functions for the Varbase SEO module.
 */

use Vardot\Entity\EntityDefinitionUpdateManager;
use Vardot\Installer\ModuleInstallerFactory;

// Include all helpers and updates.
include_once __DIR__ . '/includes/helpers.inc';
include_once __DIR__ . '/includes/updates.inc';

/**
 * Implements hook_install().
 */
function varbase_seo_install() {

  // Processor for install: in varbase_admin.info.yml file.
  ModuleInstallerFactory::installList('varbase_seo');

  // Install optional configs.
  ModuleInstallerFactory::importConfigsFromScanedDirectory('varbase_seo', '/^field.storage.*\\.(yml)$/i');
  ModuleInstallerFactory::importConfigsFromScanedDirectory('varbase_seo', '/^.*(settings.yml)$/i');
  ModuleInstallerFactory::importConfigsFromScanedDirectory('varbase_seo', '/^metatag.metatag_defaults.*\\.(yml)$/i');

  // If the google analytics module were enabled we load the custom GA settings.
  if (\Drupal::moduleHandler()->moduleExists('google_analytics')) {

    // Varbase SEO custom google analytics config settings.
    $google_analytics_managed_optional_configs = [
      'google_analytics.settings',
    ];
    ModuleInstallerFactory::importConfigsFromList('varbase_seo', $google_analytics_managed_optional_configs, 'config/managed/google_analytics');
  }

  // Entity updates to clear up any mismatched entity and/or field definitions
  // And Fix changes were detected in the entity type and field definitions.
  \Drupal::classResolver()
    ->getInstanceFromDefinition(EntityDefinitionUpdateManager::class)
    ->applyUpdates();

  // Have forced configs import after the entity and definitions updates.
  $forced_configs_import_after_entity_updates = [
    'views.view.redirect_404',
  ];
  ModuleInstallerFactory::importConfigsFromList('varbase_seo', $forced_configs_import_after_entity_updates);

  // Entity updates to clear up any mismatched entity and/or field definitions
  // And Fix changes were detected in the entity type and field definitions.
  \Drupal::classResolver()
    ->getInstanceFromDefinition(EntityDefinitionUpdateManager::class)
    ->applyUpdates();

  // Add permissions.
  ModuleInstallerFactory::addPermissions('varbase_seo');

}
